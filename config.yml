#  __________.__                             _________
#  \______   \  | _____  ___.__. ___________/   _____/ ______________  __ ___________  ______
#  |     ___/  | \__  \<   |  |/ __ \_  __ \_____  \_/ __ \_  __ \  \/ // __ \_  __ \/  ___/
#  |    |   |  |__/ __ \\___  \  ___/|  | \/        \  ___/|  | \/\   /\  ___/|  | \/\___ \
#  |____|   |____(____  / ____|\___  >__| /_______  /\___  >__|    \_/  \___  >__|  /____  >
#                     \/\/         \/             \/     \/                 \/           \/
#
# An advanced plugin which allows your players to create their own sub-servers, created by thearcadia.xyz

# Please enter your MySQL information below.
mysql:
  # Url of the MySQL server, in format: jdbc:mysql://<host>:<port>/<database>
  # Any additional options can be added at the end of url, such as:
  # ?autoReconnect=true&useSSL=false?useUnicode=true&characterEncoding=UTF-8
  url: "jdbc:mysql://localhost:3306/playerservers?useSSL=false&serverTimezone=UTC"

  username: root
  password: root

  # Developer options, do not change unless you know what you are doing.
  driver: "com.mysql.cj.jdbc.Driver"
  update-policy: "update"
  debug: false
  get-from-file: false

# Where should players be moved after they /stop or /ps kill their server?
balancer:
  - Hub1
  - Hub2

# Use player-name instead of server UUID? Basically, when turned on, server-names
# will be equal to player username instead of (for example) aa386b6h
use-usernames: true

server-name-format:
  # Should we enable custom server name formatting?
  enabled: false

  # Which format should we use?
  # %id% equals to player name or uuid depending on use-usernames option
  # %uuid% is a random UUID (independent of use-usernames option)
  # %uuidshort% is a random UUID without dashes (independent of use-usernames option)
  # %player% is the player name (independent of use-usernames option)
  # %playeruuid% is the player UUID
  # %playeruuidshort% is the player UUID without dashes
  # %timestamp% is a timestamp in milliseconds
  # %timestampshort% is a timestamp in seconds
  # %day% is a day of the month
  # %month% is a month of the year
  # %year% is a year
  #
  # To find out what a UUID looks like, you can use this website:
  # https://www.uuidgenerator.net
  format: "PS_%id%"

# What is the max amount of servers that can be running at once?
max-running-instances: 15

# If there are no online players, and the last join was before
# more than minutes-to-shutdown, the server will automatically shutdown
# to allow more space for active ones.
minutes-to-shutdown: 15

# After how many seconds after executing cp -r <templatefile> <yourserverfolder>
# should we launch the server? Increase this if you get could not connect message.
copy-delay: 3

# Default startup command. Supports %uuid% for server UUID and %mem% for memory.
launch-command: "screen -dmS %uuid% java -Xmx%mem%M -jar Spigot.jar"

ram-limiting:
  # Should we use permissions for ram management? If set to true, you MUST give
  # your players permission playerserver.ram.<amount> (ex: playerserver.ram.512)
  # or, else, the command will be blocked, and player will not be able to create
  # the server. If set to false, everyone will have ram-per-server amount of RAM.
  use-permissions: false

  # How much RAM (in MB) should we allocate to each PlayerServer?
  ram-per-server: 512

cpu-limiting:
  # Only for docker-based servers,
  # should we use permissions for cpu management? If set to true, you MUST give
  # your players permission playerserver.cpu.<amount> (ex: playerserver.cpu.1)
  # or, else, the command will be blocked, and player will not be able to create
  # the server. If set to false, everyone will have cpu-per-server amount of CPU.
  use-permissions: false

  # How much CPU (in %) should we allocate to each PlayerServer?
  cpu-per-server: 50

player-limiting:
  # Should we use permissions for max-players management? If set to true, your
  # players should have playerserver.players.<amount>. The max amount of players
  # that you could give to a single server is 100000. You can also give them
  # playerserver.players.unlimited - for unlimited players. If the player
  # has no permission, he'll be able to have unlimited players.
  #
  # NOTE: If you use permissions, and you change player's permissions,
  # their server will need to reboot in order for changes to take place.
  use-permissions: false

  # What is the max players each server should have?
  max-players-per-server: 20

plugin-limiting:
  # Should we use permissions for max-plugins management? If set to true, your
  # players should have playerserver.plugins.<amount>. The max amount of plugins
  # that you could give to a single server is 20000. You can also give them
  # playerserver.plugins.unlimited - for unlimited plugins. If the player
  # has no permission, he'll be able to have unlimited players.
  #
  # NOTE: If you use permissions, and you change player's permissions,
  # their server will need to reboot in order for changes to take place.
  use-permissions: false

  # What is the max players each server should have?
  max-plugins-per-server: 20

# Should we enable smart /ps command? You can find more info about it here:
# https://gitlab.com/OpenSource02/playerservers/-/issues/21
smart-command: false

# Should we enable permissions for server creation, deletion & more?
# If set to false, all the players will have access to those basic commands.
# Obviously, admin commands require permission no matter what.
enable-permissions: true

# Templates will not work on Pterodactyl.
templates:
  default:
    # This is just an example of what you can do with requires-permission.
    # Default template will never require permission, even if set to true.
    requires-permission: false
    # The type of the server jar. Can be "SPIGOT", "PAPER", "PUFFERFISH",
    # "PURPUR", "MAGMA", "FORGE", "FABRIC" and much more.
    #
    # For a full list of supported server jars, check out this link:
    # https://github.com/itzg/docker-minecraft-server/blob/master/README.md#server-types
    type: "PAPER"
    # The version of the template. Paper jar will be downloaded automatically
    # Please avoid using non-standard versions such as 1.7.5 or 1.10 or 1.17.1
    # If you use LATEST, server will always automatically update to the latest
    # version of Minecraft available, as soon as server is restarted.
    # If you use SNAPSHOT, server will always automatically update to the latest
    # snapshot version of Minecraft available, as soon as server is restarted.
    # SNAPSHOT may not work on all types of servers.
    version: "1.8.8"
    # What launch command should be used? If set as %default%, launch-command
    # from above will be used (~line 70). Supports %mem% and %uuid% placeholders.
    launch-command: "%default%"
    # What plugins does this template contain?
    # More info: https://playerservers.thearcadia.xyz/experimental/templates
    plugins: [ ]

# Which folders or files will not show in /config file manager?
disabled-access:
  - "ExampleFolder"
  - "Plugin.jar"

pterodactyl:
  # Should we enable Pterodactyl deployment? If set to true, you don't need
  # to configure PlayerServers Daemon. All deployments will be done by Pterodactyl.
  enabled: false

  # Url of your panel. Example: https://panel.example.com
  # Make sure not to have / at the end!!
  url: "http://localhost:8080"

  # Application token can be created under "Admin" -> "Application API."
  # Make sure to give it read/write access:
  # - Servers
  # - Allocations
  # - Users
  # For everything else except "server databases", give it read-only access.
  application-token: "token"

  # Client token can be generated under "Account" -> "API Credentials."
  # Url: https://panel.example.com/account/api
  # This token must be generated by an admin account.
  client-token: "token"

  # Important variables to configure. Make sure to enter valid nest and egg id from
  # which the servers will be deploy.
  # Location id is the ID of location used for load-balanced deployments.
  # Nodes under the selected location will be slowly filled up with servers.
  nest-id: 0
  egg-id: 0
  location-id: 0

  # Should we print the docker container installation output to the user?
  # Could be useful for debugging, and nonetheless, it can be cool for the player :)
  install-output: true

  environment_map:
    SERVER_JARFILE: "server.jar"
    MINECRAFT_VERSION: "1.8.8"
